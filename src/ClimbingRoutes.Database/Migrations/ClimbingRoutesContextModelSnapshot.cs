// <auto-generated />
using System;
using ClimbingRoutes;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace ClimbingRoutes.Database.Migrations
{
    [DbContext(typeof(ClimbingRoutesContext))]
    partial class ClimbingRoutesContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "3.0.0")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("ClimbingRoutes.Ascent", b =>
                {
                    b.Property<int>("AscentId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime?>("Date")
                        .HasColumnType("datetime2");

                    b.Property<int>("RouteId")
                        .HasColumnType("int");

                    b.Property<int>("StyleId")
                        .HasColumnType("int");

                    b.Property<int>("UserId")
                        .HasColumnType("int");

                    b.HasKey("AscentId");

                    b.HasIndex("RouteId");

                    b.HasIndex("StyleId");

                    b.HasIndex("UserId");

                    b.ToTable("Ascents");

                    b.HasData(
                        new
                        {
                            AscentId = 1,
                            Date = new DateTime(2015, 7, 24, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            RouteId = 1,
                            StyleId = 2,
                            UserId = 1
                        },
                        new
                        {
                            AscentId = 2,
                            Date = new DateTime(2011, 7, 4, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            RouteId = 4,
                            StyleId = 2,
                            UserId = 1
                        },
                        new
                        {
                            AscentId = 3,
                            Date = new DateTime(2015, 8, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            RouteId = 2,
                            StyleId = 2,
                            UserId = 1
                        },
                        new
                        {
                            AscentId = 4,
                            Date = new DateTime(2015, 9, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            RouteId = 3,
                            StyleId = 4,
                            UserId = 1
                        });
                });

            modelBuilder.Entity("ClimbingRoutes.Crag", b =>
                {
                    b.Property<int>("CragId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("CragId");

                    b.ToTable("Crag");

                    b.HasData(
                        new
                        {
                            CragId = 1,
                            Name = "Balmashanner"
                        },
                        new
                        {
                            CragId = 2,
                            Name = "Ley Quarry"
                        },
                        new
                        {
                            CragId = 3,
                            Name = "Rod Rocks"
                        },
                        new
                        {
                            CragId = 4,
                            Name = "Clashrodney"
                        });
                });

            modelBuilder.Entity("ClimbingRoutes.Discipline", b =>
                {
                    b.Property<int>("DisciplineId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("DisciplineId");

                    b.ToTable("Discipline");

                    b.HasData(
                        new
                        {
                            DisciplineId = 1,
                            Description = "Sport"
                        },
                        new
                        {
                            DisciplineId = 2,
                            Description = "Trad"
                        },
                        new
                        {
                            DisciplineId = 3,
                            Description = "Bouldering"
                        });
                });

            modelBuilder.Entity("ClimbingRoutes.Grade", b =>
                {
                    b.Property<int>("GradeId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("DisciplineId")
                        .HasColumnType("int");

                    b.HasKey("GradeId");

                    b.HasIndex("DisciplineId");

                    b.ToTable("Grades");

                    b.HasData(
                        new
                        {
                            GradeId = 1,
                            Description = "7a",
                            DisciplineId = 1
                        },
                        new
                        {
                            GradeId = 2,
                            Description = "7b",
                            DisciplineId = 1
                        },
                        new
                        {
                            GradeId = 3,
                            Description = "7c",
                            DisciplineId = 1
                        },
                        new
                        {
                            GradeId = 4,
                            Description = "E1",
                            DisciplineId = 2
                        },
                        new
                        {
                            GradeId = 5,
                            Description = "f7a",
                            DisciplineId = 3
                        },
                        new
                        {
                            GradeId = 6,
                            Description = "VS",
                            DisciplineId = 2
                        });
                });

            modelBuilder.Entity("ClimbingRoutes.Route", b =>
                {
                    b.Property<int>("RouteId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("CragId")
                        .HasColumnType("int");

                    b.Property<int>("GradeId")
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("RouteId");

                    b.HasIndex("CragId");

                    b.HasIndex("GradeId");

                    b.ToTable("Routes");

                    b.HasData(
                        new
                        {
                            RouteId = 1,
                            CragId = 1,
                            GradeId = 2,
                            Name = "Savage Amusement"
                        },
                        new
                        {
                            RouteId = 2,
                            CragId = 2,
                            GradeId = 1,
                            Name = "Nirvana"
                        },
                        new
                        {
                            RouteId = 4,
                            CragId = 1,
                            GradeId = 1,
                            Name = "Le Bon Vacance"
                        },
                        new
                        {
                            RouteId = 3,
                            CragId = 3,
                            GradeId = 3,
                            Name = "Sultan"
                        },
                        new
                        {
                            RouteId = 5,
                            CragId = 4,
                            GradeId = 6,
                            Name = "Serpent"
                        });
                });

            modelBuilder.Entity("ClimbingRoutes.Style", b =>
                {
                    b.Property<int>("StyleId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("StyleId");

                    b.ToTable("Styles");

                    b.HasData(
                        new
                        {
                            StyleId = 1,
                            Description = "On Sight"
                        },
                        new
                        {
                            StyleId = 2,
                            Description = "Worked"
                        },
                        new
                        {
                            StyleId = 3,
                            Description = "Dogged"
                        },
                        new
                        {
                            StyleId = 4,
                            Description = "Fail"
                        });
                });

            modelBuilder.Entity("ClimbingRoutes.User", b =>
                {
                    b.Property<int>("UserId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Email")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("UserId");

                    b.ToTable("Users");

                    b.HasData(
                        new
                        {
                            UserId = 1,
                            Email = "123@456.com",
                            Name = "Andy"
                        },
                        new
                        {
                            UserId = 2,
                            Email = "789@456.com",
                            Name = "Keith"
                        },
                        new
                        {
                            UserId = 3,
                            Email = "legend_of@456.com",
                            Name = "Zorro"
                        });
                });

            modelBuilder.Entity("ClimbingRoutes.Ascent", b =>
                {
                    b.HasOne("ClimbingRoutes.Route", null)
                        .WithMany("Ascents")
                        .HasForeignKey("RouteId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("ClimbingRoutes.Style", null)
                        .WithMany("Ascents")
                        .HasForeignKey("StyleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("ClimbingRoutes.User", null)
                        .WithMany("Ascents")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("ClimbingRoutes.Grade", b =>
                {
                    b.HasOne("ClimbingRoutes.Discipline", null)
                        .WithMany("Grades")
                        .HasForeignKey("DisciplineId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("ClimbingRoutes.Route", b =>
                {
                    b.HasOne("ClimbingRoutes.Crag", "Crag")
                        .WithMany("Routes")
                        .HasForeignKey("CragId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("ClimbingRoutes.Grade", "Grade")
                        .WithMany("Routes")
                        .HasForeignKey("GradeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });
#pragma warning restore 612, 618
        }
    }
}
